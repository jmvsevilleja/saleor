image: docker:stable

services:
  - docker:dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  CI_BUILD_REF_NAME: master
  CONTAINER_IMAGE: 0.0.0.0:5000/jsevilleja/saleor
  CONTAINER_TEST_IMAGE: $CONTAINER_IMAGE:$CI_BUILD_REF_NAME
  DEPLOY_SERVER_URL: myserver.example.com
  DEPLOY_PATH: /var/data/saleor
  CI_REGISTRY: 0.0.0.0:5000

before_script:
  - docker info
  - echo -n 'Pass123$$' | docker login -u jess --password-stdin $CI_REGISTRY

build:
  stage: build
  tags:
    - shell
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE


.codequality:
  stage: test
  tags:
    - shell
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]

.test:
  stage: test
  tags:
    - shell
  before_script:
    - echo -n 'Pass123$$' | docker login -u jess --password-stdin $CI_REGISTRY
    - apk add --no-cache py-pip
    - pip install docker-compose~=1.23.0
    - docker-compose version
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker-compose -f docker-compose.test.yml -p ci up --abort-on-container-exit
  coverage: '/TOTAL.*?(\d{1,2}.\d+%)/'

release_stg:
  stage: release
  tags:
    - shell
  only:
    - master
  script:
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_IMAGE:staging
    - docker push $CONTAINER_IMAGE:staging

deploy_stg:
  image: dtzar/helm-kubectl
  stage: deploy
  tags:
    - docker
  only:
    - master
  environment:
    name: staging
    url: https://staging.example.com
  before_script:
    - kubectl version
    - kubectl cluster-info

  script:
    - kubectl apply -f ./deploy/postgres/
    - kubectl apply -f ./deploy/redis/
    - kubectl apply -f ./deploy/django/
    - kubectl apply -f ./deploy/celery/
